"""Create schema

Revision ID: 4619c41813e
Revises: 50da8f4c26d0
Create Date: 2014-02-01 19:59:23.665333

"""

# revision identifiers, used by Alembic.
revision = '4619c41813e'
down_revision = '50da8f4c26d0'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import func

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('modify_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=True),
    sa.Column('first_name', sa.Text(), nullable=False),
    sa.Column('last_name', sa.Text(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('phone_number', sa.Text(), nullable=True),
    sa.Column('username', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('role', sa.Enum('Doer', 'Leader', 'Unknown', name='role'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('interest',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('modify_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('leader',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doer',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leader_interest',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('modify_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=True),
    sa.Column('leader_id', postgresql.UUID(), nullable=False),
    sa.Column('interest_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.id'], ),
    sa.ForeignKeyConstraint(['leader_id'], ['leader.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('leader_id', 'interest_id')
    )
    op.create_table('doer_interest',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('modify_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=True),
    sa.Column('doer_id', postgresql.UUID(), nullable=False),
    sa.Column('interest_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['doer_id'], ['doer.id'], ),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doer_id', 'interest_id')
    )
    op.create_table('request',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('modify_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=True),
    sa.Column('doer_id', postgresql.UUID(), nullable=False),
    sa.Column('interest_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['doer_id'], ['doer.id'], ),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doer_id', 'interest_id')
    )
    op.create_table('event',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('modify_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('leader_id', postgresql.UUID(), nullable=False),
    sa.Column('interest_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.id'], ),
    sa.ForeignKeyConstraint(['leader_id'], ['leader.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doer_event',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('modify_date', sa.DateTime(timezone=True), server_default=func.now(), nullable=True),
    sa.Column('doer_id', postgresql.UUID(), nullable=False),
    sa.Column('event_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['doer_id'], ['doer.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doer_id', 'event_id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('doer_event')
    op.drop_table('event')
    op.drop_table('request')
    op.drop_table('doer_interest')
    op.drop_table('leader_interest')
    op.drop_table('doer')
    op.drop_table('leader')
    op.drop_table('interest')
    op.drop_table('user')
    ### end Alembic commands ###
